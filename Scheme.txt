create table tblCategory (
ID int primary key identity(1,1),
Category nvarchar(100) not null
)


alter table tblitems alter column Category int;
alter table tblitems add constraint FK_Category foreign key (Category) references tblCategory(ID);





------------------

CREATE FUNCTION [dbo].[RealPayment]
(
    @Serial bigint
)
RETURNS decimal(14,2)
AS
BEGIN
	DECLARE @Result DECIMAL(14,2) = (
	SELECT TOP 1 ((tblOut1.pUSD - cUSD) 
	+ ((tblOut1.pEGP + tblOut1.pVisa - tblOut1.cEGP) / tblCurrency.EGP)
	+ ((tblOut1.pEUR - tblOut1.cEUR) / tblCurrency.EUR)
	+ ((tblOut1.pGBP - tblOut1.cGBP) / tblCurrency.GBP)
	+ ((tblOut1.pRUB - tblOut1.cRUB) / tblCurrency.RUB)
	+ ((tblOut1.pUAH - tblOut1.cUAH) / tblCurrency.UAH))
	FROM tblOut1, tblCurrency
	WHERE tblOut1.Serial = @Serial
	and (tblOut1.Date + tblOut1.Time) >= (tblCurrency.Date + tblCurrency.Time)
	order by tblCurrency.Date DESC, tblCurrency.Time DESC
    
	)

	return @Result;
END

--------------
create function [dbo].[AgentSales] (@Agent INT, @Date Date)
returns decimal(14,2) as
begin
	declare @Result decimal(14,2);
	set @Result = (select sum(coalesce(dbo.RealPayment(tblOut1.Serial), 0)) from tblOut1 where tblOut1.Agent = @Agent and tblOut1.[Date] = @Date);
	set @Result = COAlesce(@Result, 0);
	return @Result;
end
